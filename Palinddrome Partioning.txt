



Palindrome Partitioning





class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>>res;
        vector<string>path;
        f(0,s,path,res);
        return res;
    }
    void f(int index,string s,vector<string>&path,vector<vector<string>>&res)
    {
         if(index==s.size())
         {
             res.push_back(path);
             return;
         }
         for(int i=index;i<s.size();i++)
         {
             if(ispalindrome(s,index,i))
             {
                 path.push_back(s.substr(index,i-index+1));
                 f(i+1,s,path,res);
                 path.pop_back();
             }
         }
    }
    bool ispalindrome(string s,int i,int j)
    {
        while(i<=j)
        {
            if(s[i++]!=s[j--])
            {
                return false;
            }
        }
        return true;
    }
};