Brothers From Different Roots
question:Given two BSTs containing N1 and N2 distinct nodes respectively and given a value x. Your task is to complete the function countPairs(), that returns the count of all pairs from both the BSTs whose sum is equal to x.




Solution:class Solution
{
public:
int c=0;
bool solve(int k,Node*root2)
{
    if(root2==NULL)
    {
        return false;
    }
    if(root2->data==k)
    {
        return true;
    }
    bool x=false;
    bool y=false;
    if(k<root2->data)
    {
        x=solve(k,root2->left);
    }
    if(k>root2->data)
    {
        y=solve(k,root2->right);
    }
    return x or y;
}
void f(Node* root1,Node* root2,int x)
{
    if(root1==NULL)
    {
        return;
    }
  f(root1->left,root2,x);
  if(solve(x-root1->data,root2))
  {
      c++;
  }
  f(root1->right,root2,x);
}
    int countPairs(Node* root1, Node* root2, int x)
    {
        c=0;
        f(root1,root2,x);
        return c;
    }
};

